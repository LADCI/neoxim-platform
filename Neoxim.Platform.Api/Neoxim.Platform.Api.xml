<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Neoxim.Platform.Api</name>
    </assembly>
    <members>
        <member name="T:Neoxim.Platform.Api.Controllers.BaseApiController">
            <summary>
            Ctor.
            </summary>
        </member>
        <member name="T:Neoxim.Platform.Api.Controllers.DocumentsController">
            <summary>
            Documents
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Neoxim.Platform.Api.Controllers.DocumentsController.DownloadBimDocumentAsync(Neoxim.Platform.Api.Controllers.DownloadDocumentModel)" -->
        <!-- Badly formed XML comment ignored for member "M:Neoxim.Platform.Api.Controllers.DocumentsController.DownloadClassicDocumentAsync(Neoxim.Platform.Api.Controllers.DownloadDocumentModel)" -->
        <member name="M:Neoxim.Platform.Api.Controllers.DocumentsController.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get document by id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Neoxim.Platform.Api.Controllers.DocumentsController.GetDocumentsForTenantAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get documents by tenant
            </summary>
            <param name="tenantId"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Neoxim.Platform.Api.Controllers.DocumentsController.GetDocumentsForProjectAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get documents by folder identifier
            </summary>
            <param name="projectId"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Neoxim.Platform.Api.Controllers.DocumentsController.GetDocumentsForFolderAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get documents by folder identifier
            </summary>
            <param name="folderId"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Neoxim.Platform.Api.Controllers.DocumentsController.PostAsync(Neoxim.Platform.Core.Models.CreateDocumentModel,Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            Create new document
            </summary>
            <param name="model"></param>
            <param name="file"></param>
            <returns></returns>
        </member>
        <member name="M:Neoxim.Platform.Api.Controllers.DocumentsController.DownloadDocumentAsync(Neoxim.Platform.Core.Enums.DocumentTypeEnum,Neoxim.Platform.Api.Controllers.DownloadDocumentModel)">
            <summary>
            Download document for a given type
            </summary>
            <returns></returns>
        </member>
        <member name="M:Neoxim.Platform.Api.Controllers.DocumentsController.PutAsync(System.Guid,System.Object)">
            <summary>
            Update document
            </summary>
            <param name="documentId"></param>
            <param name="updateDocumentModel"></param>
            <returns></returns>
        </member>
        <member name="M:Neoxim.Platform.Api.Controllers.DocumentsController.DeleteAsync(System.String)">
            <summary>
            Delete document
            </summary>
            <param name="documentId"></param>
            <returns></returns>
        </member>
        <member name="M:Neoxim.Platform.Api.Controllers.Externals.ExternalsController.AutodeskGetAccessTokenAsync">
            <summary>
            APS - Get access token
            </summary>
            <returns></returns>
        </member>
        <member name="M:Neoxim.Platform.Api.Controllers.Externals.ExternalsController.GetModelsAsync">
            <summary>
            APS - Get models
            </summary>
            <returns></returns>
        </member>
        <member name="M:Neoxim.Platform.Api.Controllers.Externals.ExternalsController.GetModelStatus(System.String)">
            <summary>
            Get document translation status
            </summary>
            <param name="urn"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Neoxim.Platform.Api.Controllers.Externals.ExternalsController.UploadAndTranslateModelAsync(Microsoft.AspNetCore.Http.IFormFile)" -->
        <member name="M:Neoxim.Platform.Api.Controllers.Externals.ExternalsController.#ctor(Neoxim.Platform.Core.Services.IDocumentService,Neoxim.Platform.Core.Infrastructure.IStorageService,Microsoft.Extensions.Caching.Memory.IMemoryCache,Neoxim.Platform.Infrastructure.Externals.Autodesk.APS)">
            <summary>
            Ctor.
            </summary>
            <param name="documentService"></param>
            <param name="storageService"></param>
            <param name="memoryCache"></param>
            <param name="aps"></param>
        </member>
        <member name="T:Neoxim.Platform.Api.Controllers.FoldersController">
            <summary>
            Folders
            </summary>
        </member>
        <member name="M:Neoxim.Platform.Api.Controllers.FoldersController.#ctor(Neoxim.Platform.Core.Services.IFolderService)">
            <summary>
            Ctors.
            </summary>
            <param name="folderService"></param>
        </member>
        <member name="M:Neoxim.Platform.Api.Controllers.FoldersController.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get folder by id
            </summary>
            <param name="id"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Neoxim.Platform.Api.Controllers.FoldersController.GetFoldersForTenantAsync(System.Guid,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Get folders by tenant
            </summary>
            <param name="tenantId"></param>
            <param name="asTree"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Neoxim.Platform.Api.Controllers.FoldersController.PostAsync(Neoxim.Platform.Core.Models.CreateFolderModel)">
            <summary>
            Create new folder
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="T:Neoxim.Platform.Api.Controllers.ProjectsController">
            <summary>
            Users
            </summary>
        </member>
        <member name="M:Neoxim.Platform.Api.Controllers.ProjectsController.#ctor(Neoxim.Platform.Core.Services.IProjectService)">
            <summary>
            Ctor.
            </summary>
            <param name="projectService"></param>
        </member>
        <member name="M:Neoxim.Platform.Api.Controllers.ProjectsController.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get project
            </summary>
            <param name="id"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Neoxim.Platform.Api.Controllers.ProjectsController.GetProjectsByTenantAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get projects for a tenant
            </summary>
            <param name="tenantId"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Neoxim.Platform.Api.Controllers.ProjectsController.PostAsync(Neoxim.Platform.Core.Models.CreateProjectModel)">
            <summary>
            Create new project
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Neoxim.Platform.Api.Controllers.ProjectsController.PatchAsync(System.Guid,Neoxim.Platform.Core.Models.UpdateProjectModel)">
            <summary>
            Update project information
            </summary>
            <param name="id"></param>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Neoxim.Platform.Api.Controllers.ProjectsController.DeleteAsync(System.Guid)">
            <summary>
            Delete a project
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:Neoxim.Platform.Api.Controllers.TenantsController">
            <summary>
            Tenant Controllers
            </summary>
        </member>
        <member name="M:Neoxim.Platform.Api.Controllers.TenantsController.#ctor(Neoxim.Platform.Core.Services.ITenantService)">
            <summary>
            Ctor.
            </summary>
            <param name="tenantService"></param>
        </member>
        <member name="M:Neoxim.Platform.Api.Controllers.TenantsController.GetAllAsync(System.Threading.CancellationToken)">
            <summary>
            Get all tenants
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Neoxim.Platform.Api.Controllers.TenantsController.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get tenant by id
            </summary>
            <param name="id"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Neoxim.Platform.Api.Controllers.TenantsController.PostAsync(Neoxim.Platform.Core.Models.CreateTenantModel)">
            <summary>
            Create new tenant
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Neoxim.Platform.Api.Controllers.TenantsController.PatchAsync(System.Guid,Neoxim.Platform.Core.Models.UpdateTenantModel)">
            <summary>
            Update tenant information
            </summary>
            <param name="id"></param>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Neoxim.Platform.Api.Controllers.TenantsController.DeleteAsync(System.Guid)">
            <summary>
            Delete a tenant
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:Neoxim.Platform.Api.Controllers.UsersController">
            <summary>
            Users
            </summary>
        </member>
        <member name="M:Neoxim.Platform.Api.Controllers.UsersController.#ctor(Neoxim.Platform.Core.Services.IUserService)">
            <summary>
            Ctor.
            </summary>
            <param name="userService"></param>
        </member>
        <member name="M:Neoxim.Platform.Api.Controllers.UsersController.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get user by id
            </summary>
            <param name="id"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Neoxim.Platform.Api.Controllers.UsersController.GetUsersByTenantAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get users by tenant
            </summary>
            <param name="tenantId"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Neoxim.Platform.Api.Controllers.UsersController.PostAsync(Neoxim.Platform.Core.Models.CreateUserModel)">
            <summary>
            Create new user
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Neoxim.Platform.Api.Controllers.UsersController.PatchAsync(System.Guid,Neoxim.Platform.Core.Models.UpdateUserModel)">
            <summary>
            Update user information
            </summary>
            <param name="id"></param>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Neoxim.Platform.Api.Controllers.UsersController.DeleteAsync(System.Guid)">
            <summary>
            Delete a project
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:Neoxim.Platform.Api.Helpers.AuthClaimsTransformationHelper">
            <summary>
            Claim transformer
            </summary>
        </member>
        <member name="M:Neoxim.Platform.Api.Helpers.AuthClaimsTransformationHelper.#ctor(Neoxim.Platform.Core.Services.IUserService,Neoxim.Platform.Core.Services.ITenantService)">
            <summary>
            Ctor.
            </summary>
            <param name="userService"></param>
            <param name="tenantService"></param>
        </member>
        <member name="M:Neoxim.Platform.Api.Helpers.AuthClaimsTransformationHelper.TransformAsync(System.Security.Claims.ClaimsPrincipal)">
            <summary>
            Transform claims
            </summary>
            <param name="principal"></param>
            <returns></returns>
        </member>
    </members>
</doc>
